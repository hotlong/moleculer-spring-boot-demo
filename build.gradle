apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'

// --- REPOSITORIES ---

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

// --- CONFIGURATIONS ---

configurations {
    runtime
    ecj
}
configurations.all {
    // resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// --- DEPENDENCIES ---

dependencies {

    // ================ COMPILATION ================
	
    testCompile 'junit:junit:4.12'
	ecj 'org.eclipse.jdt.core.compiler:ecj:4.4.2'
	
    // ================= MOLECULER =================
	
	// Moleculer core (required)
	compile group: 'com.github.berkesa', name: 'moleculer-java-web', version: '1.0.5'
	
	// Moleculer developer console (optional)
    compile group: 'com.github.berkesa', name: 'moleculer-java-repl', version: '1.0.5'

	// JMX service (optional)
    compile group: 'com.github.berkesa', name: 'moleculer-java-jmx', version: '1.0.1'
	      
    // ================== LOGGING ==================
	
	// http://mvnrepository.com/artifact/org.slf4j/slf4j-api
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
       
	// http://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
	compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.26'

	// https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j
	compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.26'

	// https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
	compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.26'

	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-to-slf4j
	compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.12.0'
	
	// ================= MONITORING ================
		
	// --- SIGAR API TO QUERY THE CPU USAGE ---
	
	// https://mvnrepository.com/artifact/org.fusesource/sigar
	compile (group: 'org.fusesource', name: 'sigar', version: '1.6.4') {
		exclude group: 'log4j', module: 'log4j'
	}
	
	// =============== CDI FRAMEWORK ===============
	 
    // --- SPRING DEPENDENCY INJECTION FRAMEWORK ---

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
	compile (group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.1.6.RELEASE') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
					
	// =============== TRANSPORTERS ================
	
	// --- DEPENDENCY OF THE REDIS TRANSPORTER & CACHER ---
	
	// https://mvnrepository.com/artifact/biz.paluch.redis/lettuce
	// compile group: 'biz.paluch.redis', name: 'lettuce', version: '4.5.0.Final'

	// --- DEPENDENCY OF THE NATS TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/io.nats/jnats
	// compile group: 'io.nats', name: 'jnats', version: '2.5.2'

	// --- DEPENDENCY OF THE MQTT TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/net.sf.xenqtt/xenqtt
	// compile group: 'net.sf.xenqtt', name: 'xenqtt', version: '0.9.7'

	// --- DEPENDENCY OF THE JMS TRANSPORTER ---

	// https://mvnrepository.com/artifact/javax.jms/javax.jms-api
	// compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'

	// --- DEPENDENCY OF THE AMQP/RABBITMQ TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/org.apache.activemq/activemq-client
	// compile group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.9'

	// --- DEPENDENCY OF THE AMQP/RABBITMQ TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
	// compile group: 'com.rabbitmq', name: 'amqp-client', version: '5.7.1'

	// --- DEPENDENCY OF THE GOOGLE CLOUD PUB/SUB TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/com.google.cloud/google-cloud-pubsub
	// compile group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.80.0'

	// --- DEPENDENCY OF THE KAFKA TRANSPORTER ---
	
	// https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
	// compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.3.0'

	// ================ JSON APIS ==================
	    
    // --- BOON PARSER (FOR FASTER PARSING - OPTIONAL) ---
	
	// https://mvnrepository.com/artifact/io.fastjson/boon
	compile group: 'io.fastjson', name: 'boon', version: '0.34'

    // --- JACKSON PARSER (RECOMMENDED JSON API) ---
    
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9.2'

	// ========== TEMPLATE ENGINES =============

	// --- DATATREE TEMPLATES ---

	// https://mvnrepository.com/artifact/com.github.berkesa/datatree-templates
	compile group: 'com.github.berkesa', name: 'datatree-templates', version: '1.1.3'
		
}

// --- COMPILATION ---

compileJava {
	options.fork = true
	options.forkOptions.with {
		executable = 'java'
		jvmArgs = ['-classpath', project.configurations.ecj.asPath, 'org.eclipse.jdt.internal.compiler.batch.Main', '-nowarn']
	}
}

// --- WINDOWS INSTALLER ---

// Run the 'gradlew buildInstaller' command to create a setup.exe from this project.
// The EXE will be created in this directory: {project root}/build/installer/dist/

jar {
	baseName = 'moleculer-demo'
	version =  '1.0.2'
	exclude('**/application.yml') 
	exclude('**/logging-development.properties') 
	exclude('**/logging-production.properties') 
}

task copyLibs(type: Copy) {
	dependsOn jar
	from configurations.runtime
	into 'build/libs'
}	

task buildInstaller(type: Exec) {
	dependsOn copyLibs
    executable 'installer/setup/ISCC.exe'
    args 'installer/moleculer.config.iss'
}

// --- SERVLET / WAR SETTINGS ---

war {
    rootSpec.exclude('**/jcl-over-slf4j*.jar')
    rootSpec.exclude('**/log4j-api*.jar')
    rootSpec.exclude('**/log4j-over-slf4j*.jar')
    rootSpec.exclude('**/log4j-to-slf4j*.jar')
    rootSpec.exclude('**/slf4j-jdk14*.jar')
    
    rootSpec.exclude('**/logging-development.properties')
    rootSpec.exclude('**/logging-production.properties')
    
    // Add extra (eg. server-specific) JAR files to WAR file.
    // This may also include the required SLF4J implementation.
    classpath fileTree('installer/war')
}